{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","selectedGoodTitle","handleSelect","good","className","type","onClick","map","element","isSelected","classNames","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAoBF,EAAY,UAAMA,EAAN,gBAAmC,GAEnEG,EAAe,SAAAC,GAAI,OAAI,kBAAMH,EAAgBG,KAEnD,OACE,uBAAMC,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGL,EACC,qCACGE,EAED,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,cACVE,QAASJ,EAAa,SAI1B,sBAIJ,uBAAOE,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAACC,GACV,IAAMC,EAAaD,IAAYT,EAE/B,OACE,qBACE,UAAQ,OACRK,UAAWM,IAAW,CACpB,+BAAgCD,IAHpC,UAOE,6BACGA,EACC,wBACE,UAAQ,eACRJ,KAAK,SACLD,UAAU,iBACVE,QAASJ,EAAa,IAJxB,eASA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMN,EAAgBQ,IAJjC,iBAWJ,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAzBEA,cCnDrBG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.647980dc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const selectedGoodTitle = selectedGood ? `${selectedGood} is selected` : '';\n\n  const handleSelect = good => () => setSelectedGood(good);\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood ? (\n          <>\n            {selectedGoodTitle}\n\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={handleSelect('')}\n            />\n          </>\n        ) : (\n          'No goods selected'\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((element) => {\n            const isSelected = element === selectedGood;\n\n            return (\n              <tr\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': isSelected,\n                })}\n                key={element}\n              >\n                <td>\n                  {isSelected ? (\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={handleSelect('')}\n                    >\n                      -\n                    </button>\n                  ) : (\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => setSelectedGood(element)}\n                    >\n                      +\n                    </button>\n                  )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {element}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}